// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/blokhinnv/gophkeeper/internal/server/service (interfaces: UtilsService)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUtilsService is a mock of UtilsService interface.
type MockUtilsService struct {
	ctrl     *gomock.Controller
	recorder *MockUtilsServiceMockRecorder
}

// MockUtilsServiceMockRecorder is the mock recorder for MockUtilsService.
type MockUtilsServiceMockRecorder struct {
	mock *MockUtilsService
}

// NewMockUtilsService creates a new mock instance.
func NewMockUtilsService(ctrl *gomock.Controller) *MockUtilsService {
	mock := &MockUtilsService{ctrl: ctrl}
	mock.recorder = &MockUtilsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUtilsService) EXPECT() *MockUtilsServiceMockRecorder {
	return m.recorder
}

// Ping mocks base method.
func (m *MockUtilsService) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockUtilsServiceMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockUtilsService)(nil).Ping))
}
